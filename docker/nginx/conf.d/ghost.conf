# Ghost upstream server proxied through NGINX

upstream mk-ghost {
    server mk-ghost:2368;
}

server {
    # SRV
    listen 80;
    listen [::]:80;
    server_name content.mkreg.dev;
    # default headers
    include /etc/nginx/headers.conf;

    # LOCATION REDIRECT

    location / {
        return 301 https://content.mkreg.dev$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name content.mkreg.dev;

    # THREADING
    aio threads;
    directio 5m;

    # SSL
    ssl_certificate /etc/nginx/ssl/cf/ecc.pem;
    ssl_certificate_key /etc/nginx/ssl/cf/priv.key;
    proxy_ssl_server_name on;
    ssl_dhparam /etc/nginx/ssl/dh/dhparam-2048.pem;
    ssl_session_timeout 24h;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_buffer_size 1400;

    # STAPLING
    ssl_stapling on;
    ssl_stapling_verify on;

    # default headers
    include /etc/nginx/headers.conf;

    # Cloudflare resolver
    resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001]; 
    resolver_timeout 5s;	

    proxy_buffering on;
    proxy_buffer_size 32k;
    proxy_buffers 8 64k;
    proxy_busy_buffers_size 64k;
    proxy_max_temp_file_size 3m;
    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;

    proxy_cache mkreg_cache;
    proxy_cache_valid any 1d;
    proxy_cache_methods GET HEAD POST;
    proxy_cache_min_uses 1;
    proxy_cache_use_stale error timeout updating http_502 http_503 http_504;
    proxy_cache_lock off;
    proxy_cache_background_update on;

    # Locations

    # Block access to these locations
    location ~* /\.(?!well-known\/) {
        deny all;
    }

    location ~* (?:#.*#|\.(?:bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~)$ {
        deny all;
    }

    # Public locations
    location ~* \.(?:css|js|jpg|jpe?g|gif|png|svg|ico|webp|woff|woff2?)$ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header If-Modified-Since $http_if_modified_since;
        expires 1y;
        proxy_pass http://mk-ghost;
    }

    location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header If-Modified-Since $http_if_modified_since;
        expires 0;
        proxy_pass http://mk-ghost;
    }

}
