# GLOBALS
global
  log stdout format raw  local0 debug
  log stderr format raw  local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 20s
  user "$HAPROXY_USER"
  group "$HAPROXY_USER"

  # Distribute the health checks with a bit of randomness
  spread-checks 5

  # intermediate configuration
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
  ssl-dh-param-file /etc/haproxy/ssl/dhparam-2048.pem

  # performance https://www.haproxy.com/documentation/aloha/12-0/traffic-management/lb-layer7/tls/
  tune.ssl.cachesize 200000 # 40MB
  tune.ssl.lifetime 900 # 15 min

# DEFAULTS
defaults
  # HTTP OPTIONS
  log global
  log-format [%t]\ %ci:%cp\ %b/%s\ %ST\ %Tq/%Tw/%Tc/%Tr/%Tt\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r
  mode    http
  option  forwardfor
  option  logasap
  option  dontlognull
  option http-keep-alive
  option abortonclose
  # TIMEOUTS
  timeout http-request 5s
  timeout queue 5s
  timeout client  70s
  timeout server  70s
  timeout http-keep-alive 90s
  timeout check 5s
  timeout connect 5s
  maxconn 1048576

userlist admins
  user "$HAPROXY_USER" insecure-password "$HAPROXY_USER_PASSWORD"

# FRONT ENDS
frontend http2-ssl
  bind *:80

  # See docker file, this is due to haproxy accepts only one line string. Or probably i am dumb and there is a better solution
  bind *:443 ssl crt /etc/haproxy/ssl/haproxy_ecc.pem alpn h2,http/1.1


  # HEADERS
  http-request redirect scheme https if !{ ssl_fc }
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request set-header X-Forwarded-Port %[dst_port]
  http-response add-header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload' if { ssl_fc }
  http-response add-header X-Frame-Options 'SAMEORIGIN always'
  http-response add-header X-Content-Type-Options 'nosniff always'
  http-response add-header X-XSS-Protection '"1; mode=block" always'

  # ACL
  acl ghost_acl hdr(host) -i content.mkreg.dev
  acl next_js_acl hdr(host) -i mkreg.dev

  # REDIRECT non-www to www
  http-request redirect code 301 location https://%[hdr(host)]%[capture.req.uri] if { hdr(host) -i www.mkreg.dev }

  # USE BACKENDS
  use_backend next_js if next_js_acl
  use_backend ghost if ghost_acl

  default_backend next_js

# BACK ENDS
backend next_js
  option httpchk HEAD /
  server srv mk-next:3000 check port 3000 inter 5s rise 2 fall 10
  
backend ghost
  option httpchk HEAD /
  server srv mk-ghost:2368 check port 2368 inter 5s rise 2 fall 10

